openapi: 3.0.1
info:
  title: Proper Properties API
  description: API para un inmobiliaria
  version: 1.0.0
servers:
  - url: 'https://api.example.com'
tags:
  - name: clients
    description: Operaciones para fetch, add, update, y delete clientes ('Clients')
  - name: proprietors
    description: Operaciones para fetch, add, update, y delete propietarios ('Proprietor')
  - name: properties
    description: Operaciones para fetch, add, update, y delete inmuebles ('Property')
  - name: addresses
    description: Operaciones para fetch, add, update, y delete direcciones ('Address')
paths:
  /users/clients:
    get:
      tags:
        - clients
      operationId: getAllClients
      summary: Devuelve una lista de todos los clientes o todos los clientes según un parámetro especificado
      description: Devuelve una lista de todos los clientes y sus detalles según un parámetro especificado
      parameters:
        - name: surname
          in: query
          description: El/Los apellidos de cliente
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: El nombre de cliente
          required: false
          schema:
            type: string
        - name: dob
          in: query
          description: La fecha de nacimiento de cliente
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClientDTOOut"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - clients
      operationId: saveClient
      summary: Guarda un nuevo cliente
      description: Valida un objeto Client ('cliente') y crea un nuevo Client para guardar en el base de datos.
      requestBody:
        description: Un nuevo cliente
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientDTOIn"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/clients/{clientId}:
    get:
      tags:
        - clients
      operationId: getClientById
      summary: Devuelve un cliente por client ID
      description: Devuelve un objeto de un cliente por client ID
      parameters:
        - name: clientId
          in: path variable
          description: La ID de cliente
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ClientDTOOut"
        '404':
          description: Client Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
       - clients
      operationId: updateClientById
      summary: Actualiza un cliente por client ID
      description: Actuliza un cliente por client ID y devuelve el resultado como un objeto ClientDTOOut
      parameters:
        - name: clientId
          in: path variable
          description: La ID de cliente
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: El objeto de cliente con detalles actualizadas
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientDTOIn"
      responses:
         '200':
           description: OK
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ClientDTOOut"
         '400':
           description: Parse Error
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
         '404':
           description: Client Not Found
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
         '406':
           description: Not Acceptable
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
         '422':
           description: Unprocessable Entity
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
         '500':
           description: Internal Server Error
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - clients
      operationId: deleteClientById
      summary: Elimina un cliente por el client ID
      description: Elimina un cliente por el client ID y devuelve un respuesta de No Content (void)
      parameters:
        - name: clientId
          in: path variable
          description: La ID de cliente
          required: true
          schema:
            type: integer
            format: int64
      responses:
         '204':
           description: La entidad fue eliminada con éxito
         '404':
           description: Client Not Found
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
         '500':
           description: Internal Server Error
           content:
             application/json:
               schema:
                 $ref: "#/components/schemas/ErrorResponse"
  /users/proprietors:
    get:
      tags:
        - proprietors
      operationId: getAllProprietors
      summary: Devuelve una lista de todos los propietarios o todos los propietarios según un parámetro especificado
      description: Devuelve una lista de todos los propietarios o todos los propietarios según un parámetro especificado
      parameters:
        - name: surname
          in: query
          description: El/Los apellidos de propietario
          required: false
          schema:
            type: string
        - name: isAgency
          in: query
          description: Indica si el propietario es un inmobilario (true) o no (false)
          required: false
          schema:
            type: boolean
        - name: numProperties
          in: query
          description: El número de inmuebles
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ProprietorDTOOut"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - proprietors
      operationId: saveProprietor
      summary: Guarda un nuevo propietario
      description: Valida un objeto Proprietor ('propietario') y cra un nuevo Proprietor para guardar en el base de datos.
      requestBody:
        description: Un nuevo propietario
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProprietorDTOIn'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProprietorDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/proprietors/{proprietorId}:
    get:
      tags:
        - proprietors
      operationId: getProprietorById
      summary: Devuelve un propietario por propietario ID
      description: Devuelve un objeto de un propietario por propietario ID
      parameters:
        - name: proprietorId
          in: path variable
          description: La ID de propietario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProprietorDTOOut"
        '404':
          description: Proprietor Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - proprietors
      operationId: updatePropietorById
      summary: Actualiza un propietario por propietario ID
      description: Actualiza un propietario por propietario ID
      parameters:
        - name: proprietorId
          in: path variable
          description: La ID de propietario
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: El objeto de propietario con detalles actualizadas
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProprietorDTOIn"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProprietorDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Proprietor Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - proprietors
      operationId: deletePropietorById
      summary: Elimina un propietario por propietario ID
      description: Elimina un objeto de un propietario por propietario ID
      parameters:
        - name: proprietorId
          in: path variable
          description: La ID de propietario
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: La entidad fue eliminada con éxito
        '404':
          description: Proprietor Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /properties:
    get:
      tags:
        - properties
      operationId: getAllProperties
      summary: Devuelve una lista de todos los inmuebles o todos los inmuebles según un parámetro especificado
      description: Devuelve una lista de todos los inmuebles o todos los inmuebles según un parámetro especificado
      parameters:
        - name: propertyStatus
          in: query
          description: El estado de inmueble, para alquiler (RENTAL) o vender (SALE)
          required: false
          schema:
            type: string
        - name: propertyType
          in: query
          description: El tipo de inmueble, comercial (COMMERCIAL), piso (FLAT), o casa (HOUSE)
          required: false
          schema:
            type: string
        - name: numBedrooms
          in: query
          description: El número de habitaciones
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyDTOOut"
        '404':
          description: Property Status Not Found | Property Type Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - properties
      operationId: saveProperty
      summary: Guarda un nuevo inmueble
      description: Valida un objeto Property ('inmueble') y crea un nuevo Property para guardar en el base de datos.
      requestBody:
        description: Un nuevo inmueblo
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyDTOIn"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /properties/{propertyId}:
    get:
      tags:
        - properties
      operationId: getPropertyById
      summary: Devuelve un inmueble ('property') por property ID
      description: Devuelve un objeto de un inmueble ('property') por property ID
      parameters:
        - name: propertyId
          in: path variable
          description: La ID de property
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyDTOOut"
        '404':
          description: Property Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - properties
      operationId: updatePropertyById
      summary: Actualiza un inmueble ('property') por property ID
      description: Actuliza un inmueble ('property') por property ID y devuelve el resultado como un objeto PropertyDTOOut
      parameters:
        - name: proeprtyId
          in: path variable
          description: La ID de inmueble
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: El objeto de property ('inmueble') con detalles actualizadas
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PropertyDTOIn"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PropertyDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Property Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - properties
      operationId: deletePropertyById
      summary: Elimina un inmueble ('property') por el property ID
      description: Elimina una entidad Property ('inmueble') por el property ID y devuelve un respuesta de No Content (void)
      parameters:
        - name: propertyId
          in: path variable
          description: La ID de property
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: La entidad fue eliminada con éxito
        '404':
          description: Property Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /addresses:
    get:
      tags:
        - addresses
      operationId: getAllAddresses
      summary: Devuelve una lista de todos los direcciones o todos las direcciones según un parámetro especificado
      description: Devuelve una lista de todos los direcciones y sus detalles según un parámetro especificado
      parameters:
        - name: postCode
          in: query
          description: El código postal de una dirección
          required: false
          schema:
            type: string
        - name: region
          in: query
          description: La región de una dirección
          required: false
          schema:
            type: string
        - name: town
          in: query
          description: La ciudad o el pueblo de una dirección
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AddressDTOOut"
        '404':
          description: Region Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - addresses
      operationId: saveAddress
      summary: Guarda una nueva dirección
      description: Valida un objeto Address ('dirección') y crea una nueva Address para guardar en el base de datos.
      requestBody:
        description: Una nueva dirección
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressDTOIn"
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /addresses/{addressId}:
    get:
      tags:
        - addresses
      operationId: getAddressyById
      summary: Devuelve una dirección ('address') por address ID
      description: Devuelve un objeto de una dirección ('address') por address ID
      parameters:
        - name: addressId
          in: path variable
          description: La ID de una dirección
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressDTOOut"
        '404':
          description: Address Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - addresses
      operationId: updateAddressById
      summary: Actualiza una dirección ('address') por address ID
      description: Actuliza una dirección ('address') por address ID y devuelve el resultado como un objeto AddressDTOOut
      parameters:
        - name: proeprtyId
          in: path variable
          description: La ID de una dirección
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: El objeto de address ('dirección') con detalles actualizadas
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddressDTOIn"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AddressDTOOut"
        '400':
          description: Parse Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: Address Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - addresses
      summary: Elimina una dirección ('address') por el address ID
      description: Elimina una entidad Address ('dirección') por el property ID y devuelve un respuesta de No Content (void)
      parameters:
        - name: addressId
          in: path variable
          description: La ID de una dirección
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: La entidad fue eliminada con éxito
        '404':
          description: Address Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    ClientDTOIn:
      type: object
      properties:
        password:
          type: string
          example: "secret"
          description: La constraseña de cliente
        dob:
          type: string
          example: "2023-07-21"
          description: La fecha de nacimiento de cliente
        isStudent:
          type: boolean
          example: false
          description: Indica si el ciente es estudiante o no
      allOf:
        - $ref: "#/components/schemas/User"
    ClientDTOOut:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          description: La ID de cliente
      allOf:
        - $ref: "#/components/schemas/User"
    ProprietorDTOIn:
      type: object
      properties:
        password:
          type: string
          example: "secret"
          description: La constraseña de cliente
        isAgency:
          type: boolean
          example: true
          description: Indica si el propietario es un inmobiliario o no
        numProperties:
          type: integer
          format: int32
          example: 3
          description: El número de inmuebles que pertenece a un propietario
      allOf:
        - $ref: "#/components/schemas/User"
    ProprietorDTOOut:
      type: object
      properties:
        isAgency:
          type: boolean
          example: true
          description: Indica si el propietario es un inmobiliario o no
        numProperties:
          type: integer
          format: int32
          example: 3
          description: El número de inmuebles que pertenece a un propietario
      allOf:
        - $ref: "#/components/schemas/User"
    User:
      type: object
      properties:
        name:
            type: string
            example: "Joe"
            description: El nombre de cliente
        surname:
            type: string
            example: "Bloggs"
            description: El/Los apellido(s) de cliente
        username:
            type: string
            example: "joe_bloggs"
            description: El nombre de usuario de cliente
        email:
            type: string
            example: "joebloggs666@test.es"
            description: El email de cliente
        accountCreated:
            type: string
            example: "2023-07-21T14:12:09"
            description: La fecha cuando la cuenta de usuario fue creada
    PropertyDTOIn:
      type: object
      allOf:
        - $ref: "#/components/schemas/Property"
    PropertyDTOOut:
      type: object
      properties:
        id:
          type: number
          format: int64
          example: 1
          description: La ID de inmueble
      allOf:
        - $ref: "#/components/schemas/ProprietorDTOOut"
    Property:
      type: object
      properties:
        propertyStatus:
          type: string
          enum: [RENTAL, SALE]
          example: RENTAL
          description: El estado de inmueble
        propertyType:
          type: string
          enum: [ COMMERCIAL, FLAT, HOUSE ]
          example: FLAT
          description: El tipo de inmueble
        latitude:
          type: number
          format: double
          example: 40.4168
          description: La latitud de inmueble
        longitude:
          type: number
          format: double
          example: 3.7038
          description: La longitud de inmueble
        metresSqr:
          type: number
          format: int32
          example: 88
          description: Los metros cuadrados de inmueble
        description:
          type: string
          example: Una bonita casa con 3 habitaciones y un jardín.
          description: Una descripción de inmueble
        availableFrom:
          type: string
          example: "2023-07-21"
          description: La fecha desde cuando el inmueble está disponible.
        numBedrooms:
          type: number
          format: int32
          example: 3
          description: El número de habitaciones
        numBathrooms:
          type: number
          format: int32
          example: 1
          description: El número de baños
        isParking:
          type: boolean
          example: false
          description: Indica si hay parking o no
        isLift:
          type: boolean
          example: true
          description: Indica si hay acensor o no
    AddressDTOIn:
      type: object
      allOf:
        - $ref: "#/components/schemas/Address"
    AddressDTOOut:
      type: object
      properties:
        id:
          type: number
          format: int64
          example: 1
          description: La ID de una dirección
      allOf:
        - $ref: "#/components/schemas/Address"
    Address:
      type: object
      properties:
        nameOrNum:
          type: string
          example: Brookside
          description: El nombre o número de la dirección
        flatNumber:
          type: string
          example: 2A
          description: El número de un piso (opcional)
        street:
          type: string
          example: Oak Drive
          description: La calle de la dirección
        city:
          type: string
          example: Madrid
          description: La ciudad o el pueblo de la dirección
        region:
          type: string
          enum:
            - ANDALUSIA,
            - ARAGON,
            - ASTURIAS,
            - BALEARIC_ISLANDS,
            - BASQUE_COUNTRY,
            - CANARY_ISLANDS,
            - CANTABRIA,
            - CASTILE_AND_LEON,
            - CASTILE_LA_MANCHA,
            - CATALONIA,
            - CEUTA,
            - EXTREMADURA,
            - GALICIA,
            - LA_RIOJA,
            - MADRID,
            - MURCIA,
            - MELILLA,
            - NAVARRA,
            - VALENCIA
          example: MADRID
          description: La comunidad de la dirección
        postCode:
          type: string
          example: 28223
          description: El código postal de la dirección
        country:
          type: string
          enum: [Spain]
          example: Spain
          description: El país de la dirección
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          example: 404
          description: El código de estado de HTTP
        errorType:
          type: string
          example: Client Not Found Error
          description: Identifica el tipo de error
        message:
          type: string
          example: "Client not found with id: 55"
          description: Una descripción del error
















